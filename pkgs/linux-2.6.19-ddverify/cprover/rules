#!/usr/bin/make -f

CHAR_DRIVERS = genrtc applicom \
						 	 watchdog/i8xx_tco watchdog/ib700wdt watchdog/machzwd watchdog/mixcomwd \
						 	 watchdog/pcwd watchdog/sbc60xxwdt watchdog/sc1200wdt watchdog/sc520_wdt \
						 	 watchdog/smsc37b787_wdt watchdog/w83877f_wdt watchdog/w83977f_wdt \
						 	 watchdog/wdt watchdog/wdt977 watchdog/wdt_pci

BLOCK_DRIVERS = cciss floppy cpqarray 
## DAC960 doesn't work with cil
## BLOCK_DRIVERS += DAC960

BENCHMARKS = $(addprefix drivers/char/, $(CHAR_DRIVERS)) $(addprefix drivers/block/, $(BLOCK_DRIVERS))

TIMEOUT = 1200
MAXMEM = 3500
CONFIG = satabs.dfl
# CONFIG = cbmc.u5-nua
# CONFIG = wolverine.u5
# CONFIG = cpachecker.explicit

cprover/verified.cbmc.u5-nua: TOOL_OPTS := --unwind 5 --no-unwinding-assertions
cprover/verified.satabs.dfl: TOOL_OPTS := --iterations 20
cprover/verified.satabs.bc.dz.pc: TOOL_OPTS := --iterations 20 --bounds-check --div-by-zero-check --pointer-check
cprover/verified.wolverine.u5: TOOL_OPTS := --unwind 5

CPACHECKER_HOME = /home/scratch/mictau/cpachecker/trunk
cprover/verified.cpachecker.%: TOOL := $(CPACHECKER_HOME)/scripts/cpa.sh
cprover/verified.cpachecker.%: TOOL_OPTS += -setprop output.disable=true -spec $(CPACHECKER_HOME)/test/config/automata/ErrorLocationAutomaton.txt
cprover/verified.cpachecker.explicit: TOOL_OPTS += -config $(CPACHECKER_HOME)/test/config/explicitAnalysisInf.properties
cprover/verified.cpachecker.symbpredabsCPA: TOOL_OPTS += -config $(CPACHECKER_HOME)/test/config/symbpredabsCPA.properties

cprover/verified.blast.%: TOOL := pblast.opt
cprover/verified.blast.dfl: TOOL_OPTS += 

DDV_CHECKS = --check-spinlock \
						 --check-semaphore --check-mutex --check-io --check-wait-queue \
						 --check-tasklet --check-work-queue --check-timer --check-context


# building the source code
COMPILER = goto-cc
SUFFIX = bin
# COMPILER=cpp
# SUFFIX=dir/

ifeq ($(filter-out cpachecker.%,$(CONFIG)),)
  COMPILER = cil
  SUFFIX = i
endif

ifeq ($(filter-out blast.%,$(CONFIG)),)
  COMPILER = cil-blast
  SUFFIX = i
endif


# sequential version:
cprover/binaries.cbmc.%: DEFINES += -D MODEL_TYPE_SEQUENTIAL1
cprover/binaries.wolverine.%: DEFINES += -D MODEL_TYPE_SEQUENTIAL1
cprover/binaries.cpachecker.%: DEFINES += -D MODEL_TYPE_SEQUENTIAL1 -D __CPROVER_assert=__assert_fail
cprover/binaries.blast.%: DEFINES += -D MODEL_TYPE_SEQUENTIAL1

build/drivers/char/genrtc.$(SUFFIX): DEFINES += -D CONFIG_GEN_RTC_X -D CONFIG_PROC_FS
build/drivers/char/watchdog/wdt.$(SUFFIX): DEFINES += -D CONFIG_WDT_501
build/drivers/char/watchdog/wdt_pci.$(SUFFIX): DEFINES += -D CONFIG_WDT_501_PCI
build/drivers/block/cciss.$(SUFFIX): DEFINES += -D CONFIG_PROC_FS -D CONFIG_X86
build/drivers/block/cpqarray.$(SUFFIX): DEFINES += -D CONFIG_PROC_FS

build::
	test -d cprover
	ln -snf asm-i386 include/asm
	$(MAKE) -f cprover/rules cprover/binaries.$(CONFIG)
	rm include/asm

cprover/binaries.$(CONFIG): $(addsuffix .$(SUFFIX), $(addprefix build/, $(BENCHMARKS)))
	rm -f $@
	for f in $^ ; do \
	  echo $$f >> $@ ; \
	done

build/%.$(SUFFIX): %.c
	mkdir -p $(dir $@)
	cprover/ddverify/ddverify.sh --$(COMPILER) $(DDV_CHECKS) $(DEFINES) $^ -o $@


# verification rules
verify:: build
	test -d cprover
	$(MAKE) -f cprover/rules cprover/verified.$(CONFIG)

cprover/verified.$(CONFIG): $(addsuffix .vr, $(addprefix results.$(CONFIG)/, $(BENCHMARKS)))
	cat $^ > $@

results.$(CONFIG)/%vr: build/%$(SUFFIX)
	mkdir -p $(dir $@)
	set -e ; cd $(dir $@) ; \
	tool="$(TOOL)" ; if [ "x$$tool" = "x" ] ; then tool="$(basename $(CONFIG))" ; fi ; \
	claims=`list_claims.sh --cmd $$tool $(realpath $<) -- $(TOOL_OPTS)` ; \
	for c in $$claims ; do \
	  cl=`echo $$c | cut -f1 -d:` ; \
	  st=`echo $$c | cut -f2 -d:` ; \
	  if [ "$$st" = "TRUE" ] ; then st="--valid" ; else st="--unknown" ; fi ; \
	  verify.sh --claim $$cl $$st --timeout $(TIMEOUT) --maxmem $(MAXMEM) --cmd $$tool $(realpath  $<) -- $(TOOL_OPTS) ; \
	done | tee $(abspath $@) ; \
	exit $${PIPESTATUS[0]}


# cleanup
clean::
	test -d cprover
	rm -rf results.* build
	rm -f cprover/binaries.* cprover/verified.*

